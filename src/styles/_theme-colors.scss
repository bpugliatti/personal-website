// This file was generated by running 'ng generate @angular/material:theme-color'.
// Proceed with caution if making changes to this file.

@use "sass:map";
@use "@angular/material" as mat;

// Note: Color palettes are generated from primary: #FAA7B1, secondary: #A7DFFA, tertiary: #FA8554, neutral: #3F3F44
$_palettes: (
  primary: (
    0: #000000,
    10: #3a0914,
    20: #551e28,
    25: #622932,
    30: #70343d,
    35: #7e3f49,
    40: #8c4b54,
    50: #a9636c,
    60: #c77b85,
    70: #e5959f,
    80: #ffb2bb,
    90: #ffd9dc,
    95: #f5e4e5,
    98: #fff8f7,
    99: #fffbff,
    100: #ffffff,
  ),
  secondary: (
    0: #001122,
    10: #00203a,
    20: #003255,
    25: #00406a,
    30: #0a4d7f,
    35: #1b5d94,
    40: #2d6ea9,
    50: #4a86c1,
    60: #69a0da,
    70: #89bbed,
    80: #a9d4fa,
    90: #d1e9ff,
    95: #e8f4ff,
    98: #f2faff,
    99: #f8fcff,
    100: #ffffff,
  ),
  tertiary: (
    0: #000000,
    10: #370e00,
    20: #5a1c00,
    25: #6c2300,
    30: #7f2b00,
    35: #8f3608,
    40: #9f4115,
    50: #c0592c,
    60: #e07142,
    70: #ff8c5c,
    80: #ffb599,
    90: #ffdbce,
    95: #ffede7,
    98: #fff8f6,
    99: #fffbff,
    100: #ffffff,
  ),
  neutral: (
    0: #000000,
    10: #1b1b20,
    20: #303035,
    25: #3b3b40,
    30: #46464b,
    35: #525257,
    40: #5e5e63,
    50: #77767c,
    60: #919096,
    70: #acaab0,
    80: #c7c5cc,
    90: #e4e1e8,
    95: #f2f0f6,
    98: #fbf8ff,
    99: #fefbff,
    100: #ffffff,
    4: #0d0e12,
    6: #131317,
    12: #1f1f24,
    17: #292a2e,
    22: #343439,
    24: #39393e,
    87: #dbd9df,
    92: #e9e7ed,
    94: #efedf3,
    96: #f5f2f9,
  ),
  neutral-variant: (
    0: #000000,
    10: #25181a,
    20: #3b2d2e,
    25: #463839,
    30: #524344,
    35: #5f4e50,
    40: #6b5a5c,
    50: #857374,
    60: #9f8c8d,
    70: #bba6a8,
    80: #d7c1c3,
    90: #f4ddde,
    95: #ffeced,
    98: #fff8f7,
    99: #fffbff,
    100: #ffffff,
  ),
  error: (
    0: #000000,
    10: #410002,
    20: #690005,
    25: #7e0007,
    30: #93000a,
    35: #a80710,
    40: #ba1a1a,
    50: #de3730,
    60: #ff5449,
    70: #ff897d,
    80: #ffb4ab,
    90: #ffdad6,
    95: #ffedea,
    98: #fff8f7,
    99: #fffbff,
    100: #ffffff,
  ),
);

$_rest: (
  secondary: map.get($_palettes, secondary),
  neutral: map.get($_palettes, neutral),
  neutral-variant: map.get($_palettes, neutral-variant),
  error: map.get($_palettes, error),
);

$primary-palette: map.merge(map.get($_palettes, primary), $_rest);
$secondary-palette: map.merge(map.get($_palettes, secondary), $_rest);
$tertiary-palette: map.merge(map.get($_palettes, tertiary), $_rest);
$neutral-variant-palette: map.merge(
  map.get($_palettes, neutral-variant),
  $_rest
);

@function get-primary($key) {
  $primary: map.get($_palettes, primary);

  @if map.has-key($primary, $key) {
    @return map.get($primary, $key);
  } @else {
    @error "Key '#{$key}' not found in primary palette.";
  }
}

@function get-secondary($key) {
  $secondary: map.get($_palettes, secondary);

  @if map.has-key($secondary, $key) {
    @return map.get($secondary, $key);
  } @else {
    @error "Key '#{$key}' not found in secondary palette.";
  }
}

@function get-neutral($key) {
  $neutral: map.get($_palettes, neutral);

  @if map.has-key($neutral, $key) {
    @return map.get($neutral, $key);
  } @else {
    @error "Key '#{$key}' not found in neutral palette.";
  }
}

@function _high-contrast-value($light, $dark, $theme-type) {
  @if ($theme-type == light) {
    @return $light;
  }
  @if ($theme-type == dark) {
    @return $dark;
  }
  @if ($theme-type == color-scheme) {
    @return light-dark(#{$light}, #{$dark});
  }

  @error 'Unknown theme-type #{$theme-type}. Expected light, dark, or color-scheme';
}

@mixin high-contrast-overrides($theme-type) {
  @include mat.theme-overrides(
    (
      primary: _high-contrast-value(#4f1a24, #ffebec, $theme-type),
      on-primary: _high-contrast-value(#ffffff, #000000, $theme-type),
      primary-container: _high-contrast-value(#733640, #ffacb6, $theme-type),
      on-primary-container: _high-contrast-value(#ffffff, #210006, $theme-type),
      inverse-primary: _high-contrast-value(#ffb2bb, #72353e, $theme-type),
      primary-fixed: _high-contrast-value(#733640, #ffd9dc, $theme-type),
      primary-fixed-dim: _high-contrast-value(#57202a, #ffb2bb, $theme-type),
      on-primary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
      on-primary-fixed-variant: _high-contrast-value(
          #ffffff,
          #2b010a,
          $theme-type
        ),
      secondary: _high-contrast-value(#003040, #def3ff, $theme-type),
      on-secondary: _high-contrast-value(#ffffff, #000000, $theme-type),
      secondary-container: _high-contrast-value(#0a4f66, #93cae5, $theme-type),
      on-secondary-container: _high-contrast-value(
          #ffffff,
          #000d14,
          $theme-type
        ),
      secondary-fixed: _high-contrast-value(#0a4f66, #bde9ff, $theme-type),
      secondary-fixed-dim: _high-contrast-value(#003749, #97cee9, $theme-type),
      on-secondary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
      on-secondary-fixed-variant: _high-contrast-value(
          #ffffff,
          #00131c,
          $theme-type
        ),
      tertiary: _high-contrast-value(#531900, #ffece6, $theme-type),
      on-tertiary: _high-contrast-value(#ffffff, #000000, $theme-type),
      tertiary-container: _high-contrast-value(#832d00, #ffb091, $theme-type),
      on-tertiary-container: _high-contrast-value(#ffffff, #1c0400, $theme-type),
      tertiary-fixed: _high-contrast-value(#832d00, #ffdbce, $theme-type),
      tertiary-fixed-dim: _high-contrast-value(#5d1e00, #ffb599, $theme-type),
      on-tertiary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
      on-tertiary-fixed-variant: _high-contrast-value(
          #ffffff,
          #260700,
          $theme-type
        ),
      background: _high-contrast-value(#fbf8ff, #131317, $theme-type),
      on-background: _high-contrast-value(#1b1b20, #e4e1e8, $theme-type),
      surface: _high-contrast-value(#fbf8ff, #131317, $theme-type),
      surface-dim: _high-contrast-value(#b9b8be, #131317, $theme-type),
      surface-bright: _high-contrast-value(#fbf8ff, #505055, $theme-type),
      surface-container-lowest: _high-contrast-value(
          #ffffff,
          #000000,
          $theme-type
        ),
      surface-container: _high-contrast-value(#e4e1e8, #303035, $theme-type),
      surface-container-high: _high-contrast-value(
          #d5d3da,
          #3b3b40,
          $theme-type
        ),
      surface-container-highest: _high-contrast-value(
          #c7c5cc,
          #46464b,
          $theme-type
        ),
      on-surface: _high-contrast-value(#000000, #ffffff, $theme-type),
      shadow: _high-contrast-value(#000000, #000000, $theme-type),
      scrim: _high-contrast-value(#000000, #000000, $theme-type),
      surface-tint: _high-contrast-value(#8c4b54, #ffb2bb, $theme-type),
      inverse-surface: _high-contrast-value(#303035, #e4e1e8, $theme-type),
      inverse-on-surface: _high-contrast-value(#ffffff, #000000, $theme-type),
      outline: _high-contrast-value(#36292a, #ffebec, $theme-type),
      outline-variant: _high-contrast-value(#554547, #d3bdbf, $theme-type),
      error: _high-contrast-value(#600004, #ffece9, $theme-type),
      on-error: _high-contrast-value(#ffffff, #000000, $theme-type),
      error-container: _high-contrast-value(#98000a, #ffaea4, $theme-type),
      on-error-container: _high-contrast-value(#ffffff, #220001, $theme-type),
      surface-variant: _high-contrast-value(#f4ddde, #524344, $theme-type),
      on-surface-variant: _high-contrast-value(#000000, #ffffff, $theme-type),
    )
  );
}
