@use "@angular/material" as mat;
@use "_theme-colors" as custom-theme;

// âœ… Apply the Light Theme by Default
html {
  @include mat.theme(
    (
      color: (
        primary: custom-theme.$primary-palette,
        tertiary: custom-theme.$tertiary-palette,
        theme-type: light,
      ),
      typography: (
        plain-family: Rubik,
        brand-family: Open Sans,
        bold-weight: 900,
        medium-weight: 500,
        regular-weight: 300,
      ),
      density: 0,
    )
  );
}

@mixin apply-blue-mode {
  color-scheme: light;
  @include mat.theme(
    (
      color: (
        primary: custom-theme.$secondary-palette,
        tertiary: custom-theme.$tertiary-palette,
      ),
      typography: (
        plain-family: Rubik,
        brand-family: Open Sans,
        bold-weight: 900,
        medium-weight: 500,
        regular-weight: 300,
      ),
      density: 0,
    )
  );
}

@mixin apply-green-mode {
  color-scheme: light;
  @include mat.theme(
    (
      color: (
        primary: custom-theme.$green-palette,
        tertiary: custom-theme.$tertiary-palette,
      ),
      typography: (
        plain-family: Rubik,
        brand-family: Open Sans,
        bold-weight: 900,
        medium-weight: 500,
        regular-weight: 300,
      ),
      density: 0,
    )
  );
}

@mixin apply-monochrome-mode {
  color-scheme: light;
  @include mat.theme(
    (
      color: (
        primary: custom-theme.$neutral-variant-palette,
        tertiary: custom-theme.$neutral-variant-palette,
      ),
      typography: (
        plain-family: Rubik,
        brand-family: Open Sans,
        bold-weight: 900,
        medium-weight: 500,
        regular-weight: 300,
      ),
      density: 0,
    )
  );
}

body {
  margin: 0;
  overflow-x: hidden;
  height: 100%;
  font-family: Rubik, Roboto, sans-serif;
  color: custom-theme.get-neutral(30);
  background: custom-theme.get-neutral(98);
  .custom-icon,
  a:hover,
  mat-icon {
    color: custom-theme.get-primary(40) !important;
    transition: 0.5s;
  }
  .mat-toolbar {
    background-color: custom-theme.get-primary(60);
    mat-icon {
      color: custom-theme.get-primary(20) !important;
      transition: 0.5s;
    }
  }
}

h1,
h2 {
  font-family: Lora, Rubik, Roboto, sans-serif;
  margin: 0px;
}

mat-list span[matListItemTitle] {
  color: custom-theme.get-neutral(30);
}

mat-list span[matListItemLine] {
  color: custom-theme.get-neutral(40);
  font-weight: 400;
}

mat-list-item {
  padding-left: 0;
}

.capitalize {
  text-transform: capitalize;
}

.container.blue {
  @include apply-blue-mode;
  .custom-icon,
  a:hover,
  mat-icon {
    color: custom-theme.get-secondary(30) !important;
    transition: 0.5s;
  }
  @include mat.progress-bar-overrides(
    (
      active-indicator-color: custom-theme.get-secondary(30),
      track-color: custom-theme.get-secondary(95),
    )
  );
}
.mat-toolbar.blue {
  background-color: custom-theme.get-secondary(60);
  mat-icon {
    color: custom-theme.get-secondary(20) !important;
    transition: 0.5s;
  }
}

.container.green {
  @include apply-green-mode;
  .custom-icon,
  a:hover,
  mat-icon {
    color: custom-theme.get-green(30) !important;
    transition: 0.5s;
  }
  @include mat.progress-bar-overrides(
    (
      active-indicator-color: custom-theme.get-green(30),
      track-color: custom-theme.get-green(95),
    )
  );
}
.mat-toolbar.green {
  background-color: custom-theme.get-green(60);
  mat-icon {
    color: custom-theme.get-green(20) !important;
    transition: 0.5s;
  }
}

.container.monochrome {
  @include apply-monochrome-mode;
  .custom-icon,
  a:hover,
  mat-icon {
    color: custom-theme.get-neutral(30) !important;
    transition: 0.5s;
  }
  @include mat.progress-bar-overrides(
    (
      active-indicator-color: custom-theme.get-neutral(30),
      track-color: custom-theme.get-neutral(95),
    )
  );
}

.mat-toolbar.monochrome {
  background-color: custom-theme.get-neutral(60);
  mat-icon {
    color: custom-theme.get-neutral(20) !important;
    transition: 0.5s;
  }
}
